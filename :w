import toCss from "../mixin/taillwindConver.js";

export default function (objectStyle = {}) {
  let _valSort = Object.entries(objectStyle).reduce(
    (a, [currentKey, currentVal]) => {
      let value = a[1] ? {} : a;
    }
  );

  return ["d"];
}

const c = function (objectStyle = {}) {
  const _val = objectStyle;
  const defaultValue = _val.defaultStyle ? _val.defaultStyle : "";
  delete _val.defaultStyle;

  function classTw() {
    let dyn = Object.entries(_val)
      .map((v) => v[1])
      .reduce((a, c) => {
        return !a.length && a.length != 0
          ? [a.state ? a.style : "", c.state ? c.style : ""]
          : c.state
          ? a.push(c.style)
          : a;
      });
    console.log(dyn, "ddk");
    return toCss(defaultValue);
  }
  let test = classTw();

  function change(action, styleName) {
    _val[styleName] = !_val[styleName] ? {} : _val[styleName];
    let classList = objectStyle[styleName]["style"] || objectStyle[styleName];

    switch (action.toLowerCase()) {
      case "toogle":
        _val[styleName] =
          _val.styleName && _val[styleName].state === true
            ? { state: false, style: classList }
            : {
                state: true,
                style: classList,
              };
        break;
    }
    test = classTw();
    console.log("ici le test", test);
  }

  return [test, change];
};
